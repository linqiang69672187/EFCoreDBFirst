// <auto-generated />
using System;
using EFCoreDBFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreDBFirst.Migrations
{
    [DbContext(typeof(DagdbContext))]
    [Migration("20200818053418_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EFCoreDBFirst.Models.AnalysisTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TimePlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnalysisTime");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Authors", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset>("BirthData")
                        .HasColumnType("timestamp");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.BaseStationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DivId")
                        .HasColumnType("text");

                    b.Property<byte?>("IsUnderGround")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PicUrl")
                        .HasColumnType("text");

                    b.Property<string>("StationIssi")
                        .HasColumnType("text");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<int?>("SwitchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BaseStationInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.BeaconIdInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BeaconId")
                        .HasColumnType("int");

                    b.Property<string>("BeaconName")
                        .HasColumnType("text");

                    b.Property<string>("Bz")
                        .HasColumnType("text");

                    b.Property<decimal?>("FrequencyPoint")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("RssiThreshold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BeaconIdInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Books", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("AuthorId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.BsgroupInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BsgroupName")
                        .HasColumnType("text");

                    b.Property<string>("Bsissi")
                        .HasColumnType("text");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("MemberIds")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("BsgroupInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.CallLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apimsg")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("RevDeviceUnit")
                        .HasColumnType("text");

                    b.Property<int?>("RevSsi")
                        .HasColumnType("int");

                    b.Property<string>("RevType")
                        .HasColumnType("text");

                    b.Property<string>("RevUnit")
                        .HasColumnType("text");

                    b.Property<string>("RevUser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SchedulIp")
                        .HasColumnType("text");

                    b.Property<int?>("SchedulIssi")
                        .HasColumnType("int");

                    b.Property<string>("SchedulUnit")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUser")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUserName")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUserUnit")
                        .HasColumnType("text");

                    b.Property<string>("SendDeviceUnit")
                        .HasColumnType("text");

                    b.Property<int?>("SendSsi")
                        .HasColumnType("int");

                    b.Property<string>("SendType")
                        .HasColumnType("text");

                    b.Property<string>("SendUnit")
                        .HasColumnType("text");

                    b.Property<string>("SendUser")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CallLog");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DiskAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DiskAlert");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DispatchInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Ipaddress")
                        .HasColumnType("text");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("LoginId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DispatchInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DispatchListView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Ipaddress")
                        .HasColumnType("text");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("LoginId")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DispatchListView");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DispatchUserView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Ipaddress")
                        .HasColumnType("text");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("LoginId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Loginintime")
                        .HasColumnType("datetime");

                    b.Property<string>("Usename")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DispatchUserView");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DtgMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DtgId")
                        .HasColumnType("int");

                    b.Property<string>("MembIssi")
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DtgMember");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DtgroupInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.Property<string>("Gssi")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtgroupInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DutyRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BeginTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Cnt")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StepChangeTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StepName")
                        .HasColumnType("text");

                    b.Property<int?>("UserDutyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DutyRecord");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DutyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangeTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DutyRecordId")
                        .HasColumnType("int");

                    b.Property<string>("StepName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DutyStatus");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.DxgroupInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("GroupIndex")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.Property<string>("Gssis")
                        .HasColumnType("text");

                    b.Property<int?>("Gtype")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DxgroupInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Efnewusers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Efnewusers");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bz")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Depth")
                        .HasColumnType("text");

                    b.Property<string>("DivId")
                        .HasColumnType("text");

                    b.Property<int?>("ItselfFleet")
                        .HasColumnType("int");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentId")
                        .HasColumnType("text");

                    b.Property<string>("PicUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.EntityDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasColumnType("text");

                    b.Property<int?>("Online")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EntityDevice");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.FrequentCalls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DataType")
                        .HasColumnType("int");

                    b.Property<int?>("DispatchId")
                        .HasColumnType("int");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PdtRule")
                        .HasColumnType("int");

                    b.Property<string>("TerminalType")
                        .HasColumnType("text");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FrequentCalls");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.GisInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Battery")
                        .HasColumnType("text");

                    b.Property<int?>("BeaconId")
                        .HasColumnType("int");

                    b.Property<string>("DirectionTravel")
                        .HasColumnType("text");

                    b.Property<string>("HorizontalVelocity")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InserttbTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("MsRssi")
                        .HasColumnType("text");

                    b.Property<string>("PositionErr")
                        .HasColumnType("text");

                    b.Property<string>("SendReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UlRssi")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GisInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.GisRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Begtime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Cnt")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Endtime")
                        .HasColumnType("datetime");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GisRecords");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.GpscontrolStatues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CircleStatues")
                        .HasColumnType("int");

                    b.Property<int?>("DestinationStatues")
                        .HasColumnType("int");

                    b.Property<int?>("Gpscircle")
                        .HasColumnType("int");

                    b.Property<string>("Gpsdestination")
                        .HasColumnType("text");

                    b.Property<int?>("Gpsdistance")
                        .HasColumnType("int");

                    b.Property<int?>("GpsdistanceStatues")
                        .HasColumnType("int");

                    b.Property<string>("Gpsopen")
                        .HasColumnType("text");

                    b.Property<int?>("GpsorBeidou")
                        .HasColumnType("int");

                    b.Property<int?>("GpsorBeidoustatues")
                        .HasColumnType("int");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<int?>("OpenStatues")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OperatorTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Runner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GpscontrolStatues");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.GpspullRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Distance")
                        .HasColumnType("text");

                    b.Property<string>("DstIssi")
                        .HasColumnType("text");

                    b.Property<string>("Expire")
                        .HasColumnType("text");

                    b.Property<string>("GisAddr")
                        .HasColumnType("text");

                    b.Property<string>("GisIssi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("OperateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperateType")
                        .HasColumnType("text");

                    b.Property<string>("Period")
                        .HasColumnType("text");

                    b.Property<string>("PullStatus")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<string>("SrcIssi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GpspullRecords");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.GroupInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.Property<string>("Gssi")
                        .HasColumnType("text");

                    b.Property<string>("Gssis")
                        .HasColumnType("text");

                    b.Property<byte>("IsExternal")
                        .HasColumnType("tinyint");

                    b.Property<string>("OriginalGssi")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GroupInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.HistoryGisInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("DirectionTravel")
                        .HasColumnType("text");

                    b.Property<string>("HorizontalVelocity")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InserttbTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PositionErr")
                        .HasColumnType("text");

                    b.Property<string>("SendReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HistoryGisInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.HistoryOnlineStatistics", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<int?>("OnlineCnt")
                        .HasColumnType("int");

                    b.Property<long?>("OnlineTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("HistoryOnlineStatistics");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.HistoryRssiInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InserttbTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("MsRssi")
                        .HasColumnType("text");

                    b.Property<string>("UlRssi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HistoryRssiInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.HistoryUserInStockade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StockStatus")
                        .HasColumnType("text");

                    b.Property<string>("StockadeId")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HistoryUserInStockade");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageContentType")
                        .HasColumnType("text");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(4000)");

                    b.Property<int?>("ImageSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.IsInStockadeView", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DivId")
                        .HasColumnType("text");

                    b.Property<string>("DivStyle")
                        .HasColumnType("text");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("LastStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LoginName")
                        .HasColumnType("text");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nam")
                        .HasColumnType("text");

                    b.Property<string>("PointArray")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<int>("UserInStockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IsInStockadeView");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.IssiInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BsId")
                        .HasColumnType("int");

                    b.Property<string>("Bz")
                        .HasColumnType("text");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Gssis")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<byte>("IsExternal")
                        .HasColumnType("tinyint");

                    b.Property<int?>("IsOnline")
                        .HasColumnType("int");

                    b.Property<byte?>("IsUnderGround")
                        .HasColumnType("tinyint");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("Manufacturers")
                        .HasColumnType("text");

                    b.Property<int?>("OnlineSec")
                        .HasColumnType("int");

                    b.Property<string>("OriginalIssi")
                        .HasColumnType("text");

                    b.Property<string>("ProductModel")
                        .HasColumnType("text");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Typename")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IssiInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccessUnitsAndUsertype")
                        .HasColumnType("text");

                    b.Property<string>("DispatcherPermissionEntites")
                        .HasColumnType("text");

                    b.Property<string>("DispatcherSelfPermissionEntites")
                        .HasColumnType("text");

                    b.Property<int?>("EncType")
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("Hdissi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Lastinlinetime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Loginintime")
                        .HasColumnType("datetime");

                    b.Property<string>("Power")
                        .HasColumnType("text");

                    b.Property<string>("Pwd")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Usename")
                        .HasColumnType("text");

                    b.Property<int?>("Usertype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.NavigationLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Coordinates")
                        .HasColumnType("text");

                    b.Property<int?>("Direction")
                        .HasColumnType("int");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NavigationLine");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.OnlineStatistics", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<int?>("OnlineCnt")
                        .HasColumnType("int");

                    b.Property<long?>("OnlineTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OnlineStatistics");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("IdentityDeviceId")
                        .HasColumnType("text");

                    b.Property<string>("IdentityDeviceName")
                        .HasColumnType("text");

                    b.Property<string>("IdentityDeviceType")
                        .HasColumnType("text");

                    b.Property<string>("IdentityDeviceUnit")
                        .HasColumnType("text");

                    b.Property<string>("IdentityId")
                        .HasColumnType("text");

                    b.Property<string>("IdentityName")
                        .HasColumnType("text");

                    b.Property<string>("IdentityType")
                        .HasColumnType("text");

                    b.Property<string>("IdentityUnit")
                        .HasColumnType("text");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ModelName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SchedulIp")
                        .HasColumnType("text");

                    b.Property<int?>("SchedulIssi")
                        .HasColumnType("int");

                    b.Property<string>("SchedulLoginUser")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUnit")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUserName")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUserUnit")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OperationLog");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.PdtRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Pdtrule1")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PdtRule");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.PoliceStrengthPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnalysisTimeId")
                        .HasColumnType("int");

                    b.Property<int>("InUse")
                        .HasColumnType("int");

                    b.Property<int>("PoliceStrengthPlanNum")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int>("TimePlanId")
                        .HasColumnType("int");

                    b.Property<int>("TrafficControlBoxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PoliceStrengthPlan");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Posts", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Title2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.PowerFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EnPowerName")
                        .HasColumnType("text");

                    b.Property<string>("PowerKey")
                        .HasColumnType("text");

                    b.Property<string>("PowerName")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PowerFunction");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.PrePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreateDate")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PlanType")
                        .HasColumnType("text");

                    b.Property<byte[]>("Url")
                        .HasColumnType("varbinary(4000)");

                    b.HasKey("Id");

                    b.ToTable("PrePlan");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.PrePlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PrePlanType");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("LifeTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PType")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Procedure");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.ProcedureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Reserve1")
                        .HasColumnType("text");

                    b.Property<string>("Reserve10")
                        .HasColumnType("text");

                    b.Property<string>("Reserve2")
                        .HasColumnType("text");

                    b.Property<string>("Reserve3")
                        .HasColumnType("text");

                    b.Property<string>("Reserve4")
                        .HasColumnType("text");

                    b.Property<string>("Reserve5")
                        .HasColumnType("text");

                    b.Property<string>("Reserve6")
                        .HasColumnType("text");

                    b.Property<string>("Reserve7")
                        .HasColumnType("text");

                    b.Property<string>("Reserve8")
                        .HasColumnType("text");

                    b.Property<string>("Reserve9")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProcedureType");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EnRoleName")
                        .HasColumnType("text");

                    b.Property<string>("Power")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.SendMsg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Consume")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("DestSsi")
                        .HasColumnType("text");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<int?>("Reference")
                        .HasColumnType("int");

                    b.Property<string>("SourceSsi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SendMsg");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.SendMsgreceipt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("DestSsi")
                        .HasColumnType("text");

                    b.Property<int?>("Reference")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<string>("SourceSsi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SendMsgreceipt");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.SmsInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DispatcherId")
                        .HasColumnType("int");

                    b.Property<int?>("IsGroup")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReturn")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int");

                    b.Property<string>("RevIssi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RevTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SendIssi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Smscontent")
                        .HasColumnType("text");

                    b.Property<string>("Smsid")
                        .HasColumnType("text");

                    b.Property<string>("Smsmsg")
                        .HasColumnType("text");

                    b.Property<int>("Smstype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SmsInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Smslog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<bool?>("IsConsume")
                        .HasColumnType("bit");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ReturnMsg")
                        .HasColumnType("text");

                    b.Property<string>("RevDeviceUnit")
                        .HasColumnType("text");

                    b.Property<int?>("RevSsi")
                        .HasColumnType("int");

                    b.Property<string>("RevType")
                        .HasColumnType("text");

                    b.Property<string>("RevUnit")
                        .HasColumnType("text");

                    b.Property<string>("RevUser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SchedulIp")
                        .HasColumnType("text");

                    b.Property<int?>("SchedulIssi")
                        .HasColumnType("int");

                    b.Property<string>("SchedulLoginUser")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUnit")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUserName")
                        .HasColumnType("text");

                    b.Property<string>("SchedulUserUnit")
                        .HasColumnType("text");

                    b.Property<string>("SendDeviceUnit")
                        .HasColumnType("text");

                    b.Property<int?>("SendSsi")
                        .HasColumnType("int");

                    b.Property<string>("SendType")
                        .HasColumnType("text");

                    b.Property<string>("SendUnit")
                        .HasColumnType("text");

                    b.Property<string>("SendUser")
                        .HasColumnType("text");

                    b.Property<int?>("Smsid")
                        .HasColumnType("int");

                    b.Property<int?>("Smstype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Smslog");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Command")
                        .HasColumnType("text");

                    b.Property<byte?>("MarkId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Step");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Stockade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DivId")
                        .HasColumnType("text");

                    b.Property<string>("DivStyle")
                        .HasColumnType("text");

                    b.Property<bool?>("IsShow")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .HasColumnType("text");

                    b.Property<string>("PointArray")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stockade");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.SwitchInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("LocalMsc")
                        .HasColumnType("bit");

                    b.Property<int>("SwitchId")
                        .HasColumnType("int");

                    b.Property<string>("SwitchIp")
                        .HasColumnType("text");

                    b.Property<string>("SwitchName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SwitchInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.TerminalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Typename")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TerminalType");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.TimePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TimePlan");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.TrafficControlBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BoxType")
                        .HasColumnType("int");

                    b.Property<string>("Coordinates")
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double?>("Radius")
                        .HasColumnType("double");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrafficControlBox");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UsePramater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Concernids")
                        .HasColumnType("text");

                    b.Property<int?>("DeviceTimeout")
                        .HasColumnType("int");

                    b.Property<bool?>("Displayinfo")
                        .HasColumnType("bit");

                    b.Property<string>("HeaderInfoStatusMode")
                        .HasColumnType("text");

                    b.Property<bool?>("HideTimeoutDevice")
                        .HasColumnType("bit");

                    b.Property<string>("IsHideOfflineUserBySelect")
                        .HasColumnType("text");

                    b.Property<string>("IsOpenuserHeadInfo")
                        .HasColumnType("text");

                    b.Property<string>("LastLa")
                        .HasColumnType("text");

                    b.Property<string>("LastLo")
                        .HasColumnType("text");

                    b.Property<string>("Lockid")
                        .HasColumnType("text");

                    b.Property<string>("RefreshMapInterval")
                        .HasColumnType("text");

                    b.Property<string>("UserHeadInfo")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<byte?>("Voicetype")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("UsePramater");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AfterParentId")
                        .HasColumnType("text");

                    b.Property<string>("ContentChanged")
                        .HasColumnType("text");

                    b.Property<string>("FromEntity")
                        .HasColumnType("text");

                    b.Property<int?>("IsRecover")
                        .HasColumnType("int");

                    b.Property<int>("IsSelf")
                        .HasColumnType("int");

                    b.Property<string>("OperateUser")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Recovertime")
                        .HasColumnType("datetime");

                    b.Property<string>("SourceParentId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime");

                    b.Property<string>("ToEntity")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserChangeLog");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserDuty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Num")
                        .HasColumnType("text");

                    b.Property<int?>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Reserve1")
                        .HasColumnType("text");

                    b.Property<string>("Reserve10")
                        .HasColumnType("text");

                    b.Property<string>("Reserve2")
                        .HasColumnType("text");

                    b.Property<string>("Reserve3")
                        .HasColumnType("text");

                    b.Property<string>("Reserve4")
                        .HasColumnType("text");

                    b.Property<string>("Reserve5")
                        .HasColumnType("text");

                    b.Property<string>("Reserve6")
                        .HasColumnType("text");

                    b.Property<string>("Reserve7")
                        .HasColumnType("text");

                    b.Property<string>("Reserve8")
                        .HasColumnType("text");

                    b.Property<string>("Reserve9")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserDuty");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserInStockade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Distance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LastStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("StockadeId")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserInStockade");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BsId")
                        .HasColumnType("int");

                    b.Property<string>("Bz")
                        .HasColumnType("text");

                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("Issi")
                        .HasColumnType("text");

                    b.Property<double?>("Length")
                        .HasColumnType("double");

                    b.Property<string>("Nam")
                        .HasColumnType("text");

                    b.Property<string>("Num")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<int?>("ShipType")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserIcons")
                        .HasColumnType("text");

                    b.Property<double?>("Width")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserIssiView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nam")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserIssi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserIssiView");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserOnlines", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int?>("Useid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOnlines");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CanvasIcons")
                        .HasColumnType("text");

                    b.Property<string>("NormalIcons")
                        .HasColumnType("text");

                    b.Property<string>("TypeIcons")
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .HasColumnType("text");

                    b.Property<string>("UnNormalIcons")
                        .HasColumnType("text");

                    b.Property<string>("UrgencyIcons")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.VideoInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DivId")
                        .HasColumnType("text");

                    b.Property<decimal?>("La")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Lo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PicUrl")
                        .HasColumnType("text");

                    b.Property<string>("VideoName")
                        .HasColumnType("text");

                    b.Property<string>("VideoPlayUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VideoInfo");
                });

            modelBuilder.Entity("EFCoreDBFirst.Models.Books", b =>
                {
                    b.HasOne("EFCoreDBFirst.Models.Authors", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
